-- Professional Timer GUI Script for Roblox
-- By Fares and 3jb üá™üá¨
-- Made with love from Egypt

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Main Variables
local timerActive = false
local timerPaused = false
local totalSeconds = 0
local currentSeconds = 0
local connection
local lastUpdate = 0
local isMinimized = false

-- Sound Effects
local sounds = {
    click = Instance.new("Sound"),
    complete = Instance.new("Sound"),
    tick = Instance.new("Sound"),
    warning = Instance.new("Sound")
}

-- Setup Sounds
sounds.click.SoundId = "rbxassetid://131961136"
sounds.complete.SoundId = "rbxassetid://131961136" 
sounds.tick.SoundId = "rbxassetid://131961136"
sounds.warning.SoundId = "rbxassetid://131961136"

for _, sound in pairs(sounds) do
    sound.Volume = 0.3
    sound.Parent = SoundService
end

-- Create Main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ProfessionalTimer"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.5, -225, 0.5, -200)
mainFrame.Size = UDim2.new(0, 450, 0, 400)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.BackgroundTransparency = 1 -- Start invisible for fade in

-- Enhanced Drop Shadow System
local shadowFrames = {}
for i = 1, 5 do
    local shadow = Instance.new("Frame")
    shadow.Name = "Shadow" .. i
    shadow.Parent = mainFrame
    shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    shadow.BackgroundTransparency = 0.3 + (i * 0.15)
    shadow.BorderSizePixel = 0
    shadow.Position = UDim2.new(0, i * 2, 0, i * 2)
    shadow.Size = UDim2.new(1, 0, 1, 0)
    shadow.ZIndex = -i
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 20)
    shadowCorner.Parent = shadow
    
    shadowFrames[i] = shadow
end

-- Main Frame Corner
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 20)
mainCorner.Parent = mainFrame

-- Enhanced Gradient Background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
    ColorSequenceKeypoint.new(0.3, Color3.fromRGB(30, 30, 45)),
    ColorSequenceKeypoint.new(0.7, Color3.fromRGB(25, 25, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
}
gradient.Rotation = 135
gradient.Parent = mainFrame

-- Animated Border Glow
local glowFrame = Instance.new("Frame")
glowFrame.Name = "GlowFrame"
glowFrame.Parent = mainFrame
glowFrame.BackgroundTransparency = 1
glowFrame.BorderSizePixel = 0
glowFrame.Position = UDim2.new(0, -2, 0, -2)
glowFrame.Size = UDim2.new(1, 4, 1, 4)
glowFrame.ZIndex = -1

local glowGradient = Instance.new("UIGradient")
glowGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 149, 237)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(138, 43, 226)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 105, 225))
}
glowGradient.Parent = glowFrame

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(0, 22)
glowCorner.Parent = glowFrame

-- Title Bar with Glass Effect
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Parent = mainFrame
titleBar.BackgroundColor3 = Color3.fromRGB(65, 105, 225)
titleBar.BackgroundTransparency = 0.1
titleBar.BorderSizePixel = 0
titleBar.Size = UDim2.new(1, 0, 0, 60)

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 20)
titleCorner.Parent = titleBar

-- Glass Blur Effect
local titleBlur = Instance.new("Frame")
titleBlur.Parent = titleBar
titleBlur.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
titleBlur.BackgroundTransparency = 0.9
titleBlur.BorderSizePixel = 0
titleBlur.Size = UDim2.new(1, 0, 1, 0)

local titleBlurCorner = Instance.new("UICorner")
titleBlurCorner.CornerRadius = UDim.new(0, 20)
titleBlurCorner.Parent = titleBlur

local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(138, 43, 226)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 149, 237)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 105, 225))
}
titleGradient.Rotation = 45
titleGradient.Parent = titleBar

-- Title Text with Glow Effect
local titleText = Instance.new("TextLabel")
titleText.Name = "TitleText"
titleText.Parent = titleBar
titleText.BackgroundTransparency = 1
titleText.Position = UDim2.new(0, 20, 0, 0)
titleText.Size = UDim2.new(1, -120, 1, 0)
titleText.Font = Enum.Font.GothamBold
titleText.Text = "‚è∞ Professional Timer"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextScaled = true
titleText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
titleText.TextStrokeTransparency = 0.5

-- Credits Text
local creditsText = Instance.new("TextLabel")
creditsText.Name = "CreditsText"
creditsText.Parent = titleBar
creditsText.BackgroundTransparency = 1
creditsText.Position = UDim2.new(0, 20, 0, 35)
creditsText.Size = UDim2.new(1, -120, 0, 20)
creditsText.Font = Enum.Font.Gotham
creditsText.Text = "By Fares and 3jb"
creditsText.TextColor3 = Color3.fromRGB(200, 200, 255)
creditsText.TextScaled = true
creditsText.TextStrokeTransparency = 0.8

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Parent = titleBar
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
minimizeButton.BorderSizePixel = 0
minimizeButton.Position = UDim2.new(1, -80, 0.5, -15)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Text = "‚àí"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(1, 0)
minimizeCorner.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Parent = titleBar
closeButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -40, 0.5, -15)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Font = Enum.Font.GothamBold
closeButton.Text = "‚úï"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(1, 0)
closeCorner.Parent = closeButton

-- Timer Display Frame with Neon Effect
local displayFrame = Instance.new("Frame")
displayFrame.Name = "DisplayFrame"
displayFrame.Parent = mainFrame
displayFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 20)
displayFrame.BorderSizePixel = 0
displayFrame.Position = UDim2.new(0, 25, 0, 80)
displayFrame.Size = UDim2.new(1, -50, 0, 100)

local displayCorner = Instance.new("UICorner")
displayCorner.CornerRadius = UDim.new(0, 15)
displayCorner.Parent = displayFrame

-- Display Glow Effect
local displayGlow = Instance.new("Frame")
displayGlow.Parent = displayFrame
displayGlow.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
displayGlow.BackgroundTransparency = 0.8
displayGlow.BorderSizePixel = 0
displayGlow.Position = UDim2.new(0, -2, 0, -2)
displayGlow.Size = UDim2.new(1, 4, 1, 4)
displayGlow.ZIndex = -1

local displayGlowCorner = Instance.new("UICorner")
displayGlowCorner.CornerRadius = UDim.new(0, 17)
displayGlowCorner.Parent = displayGlow

-- Timer Display Text with Animation
local timerDisplay = Instance.new("TextLabel")
timerDisplay.Name = "TimerDisplay"
timerDisplay.Parent = displayFrame
timerDisplay.BackgroundTransparency = 1
timerDisplay.Size = UDim2.new(1, 0, 1, 0)
timerDisplay.Font = Enum.Font.Code
timerDisplay.Text = "00:00:00"
timerDisplay.TextColor3 = Color3.fromRGB(100, 255, 100)
timerDisplay.TextScaled = true
timerDisplay.TextStrokeColor3 = Color3.fromRGB(0, 100, 0)
timerDisplay.TextStrokeTransparency = 0.3

-- Input Frame
local inputFrame = Instance.new("Frame")
inputFrame.Name = "InputFrame"
inputFrame.Parent = mainFrame
inputFrame.BackgroundTransparency = 1
inputFrame.Position = UDim2.new(0, 25, 0, 200)
inputFrame.Size = UDim2.new(1, -50, 0, 80)

-- Input Boxes with Enhanced Style
local inputs = {}
local inputLabels = {"Hours", "Minutes", "Seconds"}
local inputDefaults = {"0", "5", "0"}

for i = 1, 3 do
    local inputContainer = Instance.new("Frame")
    inputContainer.Name = inputLabels[i] .. "Container"
    inputContainer.Parent = inputFrame
    inputContainer.BackgroundTransparency = 1
    inputContainer.Position = UDim2.new((i-1) * 0.33 + 0.02, 0, 0, 0)
    inputContainer.Size = UDim2.new(0.28, 0, 1, 0)
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = inputContainer
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 0.3, 0)
    label.Font = Enum.Font.GothamBold
    label.Text = inputLabels[i]
    label.TextColor3 = Color3.fromRGB(200, 200, 255)
    label.TextScaled = true
    label.TextStrokeTransparency = 0.8
    
    local inputBg = Instance.new("Frame")
    inputBg.Name = "InputBg"
    inputBg.Parent = inputContainer
    inputBg.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    inputBg.BorderSizePixel = 0
    inputBg.Position = UDim2.new(0, 0, 0.35, 0)
    inputBg.Size = UDim2.new(1, 0, 0.4, 0)
    
    local inputBgCorner = Instance.new("UICorner")
    inputBgCorner.CornerRadius = UDim.new(0, 8)
    inputBgCorner.Parent = inputBg
    
    local textBox = Instance.new("TextBox")
    textBox.Name = "Input"
    textBox.Parent = inputBg
    textBox.BackgroundTransparency = 1
    textBox.Size = UDim2.new(1, -40, 1, 0)
    textBox.Position = UDim2.new(0, 20, 0, 0)
    textBox.Font = Enum.Font.Gotham
    textBox.PlaceholderText = inputDefaults[i]
    textBox.Text = inputDefaults[i]
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.TextScaled = true
    
    -- Plus Button
    local plusButton = Instance.new("TextButton")
    plusButton.Name = "PlusButton"
    plusButton.Parent = inputContainer
    plusButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    plusButton.BorderSizePixel = 0
    plusButton.Position = UDim2.new(0.7, 0, 0.8, 0)
    plusButton.Size = UDim2.new(0.25, 0, 0.15, 0)
    plusButton.Font = Enum.Font.GothamBold
    plusButton.Text = "+"
    plusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    plusButton.TextScaled = true
    
    local plusCorner = Instance.new("UICorner")
    plusCorner.CornerRadius = UDim.new(1, 0)
    plusCorner.Parent = plusButton
    
    -- Minus Button
    local minusButton = Instance.new("TextButton")
    minusButton.Name = "MinusButton"
    minusButton.Parent = inputContainer
    minusButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    minusButton.BorderSizePixel = 0
    minusButton.Position = UDim2.new(0.05, 0, 0.8, 0)
    minusButton.Size = UDim2.new(0.25, 0, 0.15, 0)
    minusButton.Font = Enum.Font.GothamBold
    minusButton.Text = "‚àí"
    minusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minusButton.TextScaled = true
    
    local minusCorner = Instance.new("UICorner")
    minusCorner.CornerRadius = UDim.new(1, 0)
    minusCorner.Parent = minusButton
    
    inputs[inputLabels[i]:lower()] = {textBox = textBox, plus = plusButton, minus = minusButton}
end

-- Control Buttons Frame
local controlFrame = Instance.new("Frame")
controlFrame.Name = "ControlFrame"
controlFrame.Parent = mainFrame
controlFrame.BackgroundTransparency = 1
controlFrame.Position = UDim2.new(0, 25, 0, 300)
controlFrame.Size = UDim2.new(1, -50, 0, 50)

-- Enhanced Control Buttons
local buttons = {}
local buttonData = {
    {name = "Start", color = Color3.fromRGB(40, 167, 69), text = "‚ñ∂ Start", glow = Color3.fromRGB(100, 255, 100)},
    {name = "Pause", color = Color3.fromRGB(255, 193, 7), text = "‚è∏ Pause", glow = Color3.fromRGB(255, 255, 100)},
    {name = "Stop", color = Color3.fromRGB(220, 53, 69), text = "‚èπ Stop", glow = Color3.fromRGB(255, 100, 100)},
    {name = "Reset", color = Color3.fromRGB(108, 117, 125), text = "üîÑ Reset", glow = Color3.fromRGB(200, 200, 200)}
}

for i, data in ipairs(buttonData) do
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Parent = controlFrame
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Position = UDim2.new((i-1) * 0.25 + 0.01, 0, 0, 0)
    buttonContainer.Size = UDim2.new(0.23, 0, 1, 0)
    
    local buttonGlow = Instance.new("Frame")
    buttonGlow.Parent = buttonContainer
    buttonGlow.BackgroundColor3 = data.glow
    buttonGlow.BackgroundTransparency = 0.7
    buttonGlow.BorderSizePixel = 0
    buttonGlow.Position = UDim2.new(0, -2, 0, -2)
    buttonGlow.Size = UDim2.new(1, 4, 1, 4)
    buttonGlow.ZIndex = -1
    
    local buttonGlowCorner = Instance.new("UICorner")
    buttonGlowCorner.CornerRadius = UDim.new(0, 12)
    buttonGlowCorner.Parent = buttonGlow
    
    local button = Instance.new("TextButton")
    button.Name = data.name .. "Button"
    button.Parent = buttonContainer
    button.BackgroundColor3 = data.color
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Font = Enum.Font.GothamBold
    button.Text = data.text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.TextStrokeTransparency = 0.8
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, data.color),
        ColorSequenceKeypoint.new(1, Color3.new(data.color.R * 0.8, data.color.G * 0.8, data.color.B * 0.8))
    }
    buttonGradient.Rotation = 90
    buttonGradient.Parent = button
    
    buttons[data.name:lower()] = button
end

-- Status Bar with Glass Effect
local statusBar = Instance.new("Frame")
statusBar.Name = "StatusBar"
statusBar.Parent = mainFrame
statusBar.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
statusBar.BackgroundTransparency = 0.3
statusBar.BorderSizePixel = 0
statusBar.Position = UDim2.new(0, 0, 1, -35)
statusBar.Size = UDim2.new(1, 0, 0, 35)

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 20)
statusCorner.Parent = statusBar

local statusText = Instance.new("TextLabel")
statusText.Name = "StatusText"
statusText.Parent = statusBar
statusText.BackgroundTransparency = 1
statusText.Position = UDim2.new(0, 15, 0, 0)
statusText.Size = UDim2.new(1, -30, 1, 0)
statusText.Font = Enum.Font.Gotham
statusText.Text = "Ready to start timing... ‚è∞"
statusText.TextColor3 = Color3.fromRGB(150, 200, 255)
statusText.TextScaled = true
statusText.TextXAlignment = Enum.TextXAlignment.Left

-- Progress Bar Frame
local progressFrame = Instance.new("Frame")
progressFrame.Name = "ProgressFrame"
progressFrame.Parent = mainFrame
progressFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
progressFrame.BorderSizePixel = 0
progressFrame.Position = UDim2.new(0, 25, 0, 370)
progressFrame.Size = UDim2.new(1, -50, 0, 10)

local progressCorner = Instance.new("UICorner")
progressCorner.CornerRadius = UDim.new(0, 5)
progressCorner.Parent = progressFrame

local progressBar = Instance.new("Frame")
progressBar.Name = "ProgressBar"
progressBar.Parent = progressFrame
progressBar.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
progressBar.BorderSizePixel = 0
progressBar.Size = UDim2.new(0, 0, 1, 0)

local progressBarCorner = Instance.new("UICorner")
progressBarCorner.CornerRadius = UDim.new(0, 5)
progressBarCorner.Parent = progressBar

local progressGradient = Instance.new("UIGradient")
progressGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 255, 100)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(50, 200, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 100, 255))
}
progressGradient.Parent = progressBar

-- Animation Functions
local function createTween(object, properties, duration, style, direction)
    style = style or Enum.EasingStyle.Quad
    direction = direction or Enum.EasingDirection.Out
    local tweenInfo = TweenInfo.new(duration, style, direction)
    return TweenService:Create(object, tweenInfo, properties)
end

local function playSound(soundName)
    if sounds[soundName] then
        sounds[soundName]:Play()
    end
end

local function updateDisplay(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = seconds % 60
    
    timerDisplay.Text = string.format("%02d:%02d:%02d", hours, minutes, secs)
    
    -- Color animation based on time remaining
    if seconds <= 10 and seconds > 0 and timerActive then
        timerDisplay.TextColor3 = Color3.fromRGB(255, 100, 100)
        displayGlow.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
        if seconds <= 3 then
            local pulse = createTween(timerDisplay, {TextTransparency = 0.3}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
            pulse.Completed:Connect(function()
                createTween(timerDisplay, {TextTransparency = 0}, 0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut):Play()
            end)
            pulse:Play()
        end
    elseif timerPaused then
        timerDisplay.TextColor3 = Color3.fromRGB(255, 193, 7)
        displayGlow.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    else
        timerDisplay.TextColor3 = Color3.fromRGB(100, 255, 100)
        displayGlow.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
    end
    
    -- Update progress bar
    if totalSeconds > 0 then
        local progress = math.max(0, math.min(1, (totalSeconds - seconds) / totalSeconds))
        createTween(progressBar, {Size = UDim2.new(progress, 0, 1, 0)}, 0.3):Play()
    end
end

local function updateStatus(message)
    statusText.Text = message
    local colorTween = createTween(statusText, {TextColor3 = Color3.fromRGB(100, 255, 100)}, 0.3)
    colorTween.Completed:Connect(function()
        wait(1)
        createTween(statusText, {TextColor3 = Color3.fromRGB(150, 200, 255)}, 0.5):Play()
    end)
    colorTween:Play()
end

local function getTimeFromInputs()
    local hours = tonumber(inputs.hours.textBox.Text) or 0
    local minutes = tonumber(inputs.minutes.textBox.Text) or 0
    local seconds = tonumber(inputs.seconds.textBox.Text) or 0
    return hours * 3600 + minutes * 60 + seconds
end

local function startTimer()
    if not timerActive then
        totalSeconds = getTimeFromInputs()
        currentSeconds = totalSeconds
        if totalSeconds <= 0 then
            updateStatus("Please set a valid time!")
            return
        end
    end
    
    timerActive = true
    timerPaused = false
    playSound("click")
    updateStatus("Timer started! ‚è∞")
    
    buttons.start.Text = "‚ñ∂ Resume"
    
    connection = RunService.Heartbeat:Connect(function()
        if timerActive and not timerPaused then
            local now = tick()
            if now - lastUpdate >= 1 then
                currentSeconds = currentSeconds - 1
                lastUpdate = now
                
                updateDisplay(currentSeconds)
                
                if currentSeconds <= 0 then
                    stopTimer()
                    playSound("complete")
                    updateStatus("Time's up! ‚è∞")
                    
                    -- Victory animation
                    for i = 1, 5 do
                        spawn(function()
                            wait(i * 0.1)
                            local flash = createTween(mainFrame, {BackgroundTransparency = 0.3}, 0.2)
                            flash.Completed:Connect(function()
                                createTween(mainFrame, {BackgroundTransparency = 0}, 0.2):Play()
                            end)
                            flash:Play()
                        end)
                    end
                elseif currentSeconds <= 10 then
                    playSound("warning")
                end
            end
        end
    end)
end

local function pauseTimer()
    if timerActive then
        timerPaused = not timerPaused
        playSound("click")
        
        if timerPaused then
            buttons.pause.Text = "‚ñ∂ Resume"
            updateStatus("Timer paused ‚è∏")
        else
            buttons.pause.Text = "‚è∏ Pause"
            updateStatus("Timer resumed ‚è∞")
        end
        
        updateDisplay(currentSeconds)
    end
end

local function stopTimer()
    timerActive = false
    timerPaused = false
    if connection then
        connection:Disconnect()
        connection = nil
    end
    
    playSound("click")
    buttons.start.Text = "‚ñ∂ Start"
    buttons.pause.Text = "‚è∏ Pause"
    updateStatus("Timer stopped ‚èπ")
    updateDisplay(currentSeconds)
end

local function resetTimer()
    stopTimer()
    currentSeconds = 0
    totalSeconds = 0
    playSound("click")
    updateStatus("Timer reset üîÑ")
    updateDisplay(0)
    progressBar.Size = UDim2.new(0, 0, 1, 0)
end

local function toggleMinimize()
    isMinimized = not isMinimized
    playSound("click")
    
    if isMinimized then
        createTween(mainFrame, {Size = UDim2.new(0, 450, 0, 60)}, 0.3):Play()
        minimizeButton.Text = "‚àí"
        
        wait(0.1)
        for _, child in pairs(mainFrame:GetChildren()) do
            if child ~= titleBar and child.Name ~= "GlowFrame" and not child.Name:match("Shadow") then
                createTween(child, {BackgroundTransparency = 0}, 0.3):Play()
                if child:IsA("TextLabel") or child:IsA("TextButton") then
                    createTween(child, {TextTransparency = 0}, 0.3):Play()
                end
            end
        end
    end
end

-- Plus/Minus Button Functions
local function adjustInput(inputType, amount)
    local input = inputs[inputType]
    if input and input.textBox then
        local current = tonumber(input.textBox.Text) or 0
        local new = math.max(0, current + amount)
        
        if inputType == "hours" then
            new = math.min(23, new)
        elseif inputType == "minutes" or inputType == "seconds" then
            new = math.min(59, new)
        end
        
        input.textBox.Text = tostring(new)
        playSound("click")
        
        -- Visual feedback
        local button = amount > 0 and input.plus or input.minus
        createTween(button, {Size = UDim2.new(0.3, 0, 0.18, 0)}, 0.1, Enum.EasingStyle.Back):Play()
        wait(0.1)
        createTween(button, {Size = UDim2.new(0.25, 0, 0.15, 0)}, 0.2, Enum.EasingStyle.Back):Play()
    end
end

-- Fade In Animation
local function fadeInGUI()
    -- Start everything invisible
    mainFrame.BackgroundTransparency = 1
    for _, shadow in pairs(shadowFrames) do
        shadow.BackgroundTransparency = 1
    end
    
    for _, child in pairs(mainFrame:GetDescendants()) do
        if child:IsA("GuiObject") then
            child.BackgroundTransparency = 1
            if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                child.TextTransparency = 1
            end
        end
    end
    
    -- Fade in main frame
    createTween(mainFrame, {BackgroundTransparency = 0}, 0.5, Enum.EasingStyle.Quad):Play()
    
    -- Fade in shadows
    for i, shadow in pairs(shadowFrames) do
        spawn(function()
            wait(i * 0.05)
            createTween(shadow, {BackgroundTransparency = 0.3 + (i * 0.15)}, 0.3):Play()
        end)
    end
    
    -- Fade in all other elements
    wait(0.2)
    for _, child in pairs(mainFrame:GetDescendants()) do
        if child:IsA("GuiObject") and child.Parent ~= mainFrame then
            spawn(function()
                local targetTransparency = 0
                if child.Name:match("Glow") or child.Name:match("Blur") then
                    targetTransparency = child.Name:match("Blur") and 0.9 or 0.8
                elseif child.Name == "StatusBar" then
                    targetTransparency = 0.3
                elseif child.Name == "TitleBar" then
                    targetTransparency = 0.1
                end
                
                createTween(child, {BackgroundTransparency = targetTransparency}, 0.4):Play()
                
                if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                    createTween(child, {TextTransparency = 0}, 0.4):Play()
                end
            end)
        end
    end
end

-- Fade Out Animation
local function fadeOutGUI()
    local fadeTime = 0.3
    
    -- Fade out all elements
    for _, child in pairs(mainFrame:GetDescendants()) do
        if child:IsA("GuiObject") then
            createTween(child, {BackgroundTransparency = 1}, fadeTime):Play()
            if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                createTween(child, {TextTransparency = 1}, fadeTime):Play()
            end
        end
    end
    
    -- Fade out shadows
    for _, shadow in pairs(shadowFrames) do
        createTween(shadow, {BackgroundTransparency = 1}, fadeTime):Play()
    end
    
    -- Fade out main frame last
    local mainTween = createTween(mainFrame, {BackgroundTransparency = 1}, fadeTime)
    mainTween.Completed:Connect(function()
        screenGui:Destroy()
    end)
    mainTween:Play()
end

-- Button Animations
local function addButtonAnimation(button)
    local originalSize = button.Size
    
    button.MouseEnter:Connect(function()
        playSound("tick")
        createTween(button, {
            Size = UDim2.new(originalSize.X.Scale * 1.05, originalSize.X.Offset, originalSize.Y.Scale * 1.05, originalSize.Y.Offset),
            BackgroundColor3 = Color3.new(button.BackgroundColor3.R * 1.2, button.BackgroundColor3.G * 1.2, button.BackgroundColor3.B * 1.2)
        }, 0.2, Enum.EasingStyle.Back):Play()
    end)
    
    button.MouseLeave:Connect(function()
        createTween(button, {
            Size = originalSize,
            BackgroundColor3 = Color3.new(button.BackgroundColor3.R / 1.2, button.BackgroundColor3.G / 1.2, button.BackgroundColor3.B / 1.2)
        }, 0.2, Enum.EasingStyle.Back):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        createTween(button, {Size = UDim2.new(originalSize.X.Scale * 0.95, originalSize.X.Offset, originalSize.Y.Scale * 0.95, originalSize.Y.Offset)}, 0.1):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        createTween(button, {Size = originalSize}, 0.1):Play()
    end)
end

-- Connect Events
buttons.start.MouseButton1Click:Connect(startTimer)
buttons.pause.MouseButton1Click:Connect(pauseTimer)
buttons.stop.MouseButton1Click:Connect(stopTimer)
buttons.reset.MouseButton1Click:Connect(resetTimer)

closeButton.MouseButton1Click:Connect(fadeOutGUI)
minimizeButton.MouseButton1Click:Connect(toggleMinimize)

-- Plus/Minus button connections
for inputType, inputData in pairs(inputs) do
    inputData.plus.MouseButton1Click:Connect(function()
        adjustInput(inputType, 1)
    end)
    
    inputData.minus.MouseButton1Click:Connect(function()
        adjustInput(inputType, -1)
    end)
    
    -- Add animations to plus/minus buttons
    addButtonAnimation(inputData.plus)
    addButtonAnimation(inputData.minus)
end

-- Add animations to all main buttons
for _, button in pairs(buttons) do
    addButtonAnimation(button)
end

addButtonAnimation(closeButton)
addButtonAnimation(minimizeButton)

-- Input validation
for inputType, inputData in pairs(inputs) do
    inputData.textBox.FocusLost:Connect(function()
        local value = tonumber(inputData.textBox.Text) or 0
        if inputType == "hours" then
            value = math.max(0, math.min(23, value))
        else
            value = math.max(0, math.min(59, value))
        end
        inputData.textBox.Text = tostring(value)
    end)
end

-- Glow animation for border
spawn(function()
    while true do
        createTween(glowGradient, {Rotation = glowGradient.Rotation + 360}, 5, Enum.EasingStyle.Linear):Play()
        wait(5)
    end
end)

-- Progress bar color animation
spawn(function()
    while true do
        createTween(progressGradient, {Rotation = progressGradient.Rotation + 180}, 3, Enum.EasingStyle.Sine):Play()
        wait(3)
    end
end)

-- Title glow effect
spawn(function()
    while true do
        createTween(titleText, {TextStrokeTransparency = 0.2}, 1, Enum.EasingStyle.Sine):Play()
        wait(1)
        createTween(titleText, {TextStrokeTransparency = 0.8}, 1, Enum.EasingStyle.Sine):Play()
        wait(1)
    end
end)

-- Keyboard shortcuts
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Space then
        if timerActive then
            pauseTimer()
        else
            startTimer()
        end
    elseif input.KeyCode == Enum.KeyCode.R then
        resetTimer()
    elseif input.KeyCode == Enum.KeyCode.Escape then
        fadeOutGUI()
    end
end)

-- Initialize
lastUpdate = tick()
updateDisplay(0)
updateStatus("Professional Timer Ready! üöÄ")

-- Start the fade in animation
fadeInGUI()

-- Welcome message animation
spawn(function()
    wait(1)
    updateStatus("Made by Fares and 3jb with ‚ù§Ô∏è")
    wait(2)
    updateStatus("Use Space to Start/Pause, R to Reset, ESC to Close")
    wait(3)
    updateStatus("Ready to start timing... ‚è∞")
end)Text = "+"
        
        
        local function toggleMinimize()
    isMinimized = not isMinimized
    playSound("click")
    
    if isMinimized then
        -- ÿ™ÿµÿ∫Ÿäÿ± ÿßŸÑŸÜÿßŸÅÿ∞ÿ©
        createTween(mainFrame, {Size = UDim2.new(0, 450, 0, 60)}, 0.3):Play()
        minimizeButton.Text = "üîº"
        
        wait(0.1)
        for _, child in pairs(mainFrame:GetChildren()) do
            if child ~= titleBar and child.Name ~= "GlowFrame" and not child.Name:match("Shadow") then
                createTween(child, {BackgroundTransparency = 1}, 0.2):Play()
                if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                    createTween(child, {TextTransparency = 1}, 0.2):Play()
                end
            end
        end
    else
        -- ÿ•ÿπÿßÿØÿ© ÿ≠ÿ¨ŸÖ ÿßŸÑŸÜÿßŸÅÿ∞ÿ© ÿßŸÑŸÉÿßŸÖŸÑ
        createTween(mainFrame, {Size = UDim2.new(0, 450, 0, 400)}, 0.3):Play()
        minimizeButton.Text = "‚àí"
        
        wait(0.1)
        for _, child in pairs(mainFrame:GetChildren()) do
            if child ~= titleBar and child.Name ~= "GlowFrame" and not child.Name:match("Shadow") then
                -- ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ¥ŸÅÿßŸÅŸäÿ© ÿßŸÑÿ£ÿµŸÑŸäÿ© ŸÑŸÉŸÑ ÿπŸÜÿµÿ± ÿ≠ÿ≥ÿ® ŸÜŸàÿπŸá
                local targetTransparency = 0
                if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
                    createTween(child, {TextTransparency = 0}, 0.2):Play()
                else
                    createTween(child, {BackgroundTransparency = targetTransparency}, 0.2):Play()
                end
            end
        end
    end
end
